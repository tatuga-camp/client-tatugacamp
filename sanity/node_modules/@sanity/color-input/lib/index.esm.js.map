{"version":3,"file":"index.esm.js","sources":["../src/schemas/hslaColor.ts","../src/schemas/rgbaColor.ts","../src/ColorPickerFields.tsx","../src/ColorPicker.tsx","../src/ColorInput.tsx","../src/schemas/color.tsx","../src/schemas/hsvaColor.ts","../src/index.ts"],"sourcesContent":["import {defineType} from 'sanity'\n\nexport const hslaColor = defineType({\n  title: 'Hue Saturation Lightness',\n  name: 'hslaColor',\n  type: 'object',\n  fields: [\n    {name: 'h', type: 'number', title: 'Hue'},\n    {name: 's', type: 'number', title: 'Saturation'},\n    {name: 'l', type: 'number', title: 'Lightness'},\n    {name: 'a', type: 'number', title: 'Alpha'},\n  ],\n})\n","import {defineType} from 'sanity'\n\nexport const rgbaColor = defineType({\n  title: 'Red Green Blue (rgb)',\n  name: 'rgbaColor',\n  type: 'object',\n  fields: [\n    {name: 'r', type: 'number', title: 'Red'},\n    {name: 'g', type: 'number', title: 'Green'},\n    {name: 'b', type: 'number', title: 'Blue'},\n    {name: 'a', type: 'number', title: 'Alpha'},\n  ],\n})\n","import React, {useCallback, useMemo} from 'react'\n// @ts-expect-error missing export\nimport {isValidHex} from 'react-color/lib/helpers/color'\nimport {EditableInput} from 'react-color/lib/components/common'\nimport {Box, Flex, useTheme} from '@sanity/ui'\nimport {ColorChangeHandler, HEXColor, HSLColor, HSVColor, RGBColor} from 'react-color'\nimport {EditableInputStyles} from 'react-color/lib/components/common/EditableInput'\n\ninterface ColorPickerFieldsProps {\n  rgb?: RGBColor\n  hsl?: HSLColor\n  hex?: string\n  disableAlpha: boolean\n  onChange: ColorChangeHandler<HSLColor | HSVColor | RGBColor | HEXColor>\n}\n\nexport const ColorPickerFields = ({\n  onChange,\n  rgb,\n  hsl,\n  hex,\n  disableAlpha,\n}: ColorPickerFieldsProps) => {\n  const {sanity} = useTheme()\n\n  const inputStyles: EditableInputStyles = useMemo(\n    () => ({\n      input: {\n        width: '80%',\n        padding: '4px 10% 3px',\n        border: 'none',\n        boxShadow: `inset 0 0 0 1px ${sanity.color.input.default.enabled.border}`,\n        color: sanity.color.input.default.enabled.fg,\n        backgroundColor: sanity.color.input.default.enabled.bg,\n        fontSize: sanity.fonts.text.sizes[0].fontSize,\n        textAlign: 'center',\n      },\n      label: {\n        display: 'block',\n        textAlign: 'center',\n        fontSize: sanity.fonts.label.sizes[0].fontSize,\n        color: sanity.color.base.fg,\n        paddingTop: '3px',\n        paddingBottom: '4px',\n        textTransform: 'capitalize',\n      },\n    }),\n    [sanity]\n  )\n\n  const handleChange: ColorChangeHandler<Record<string, string>> = useCallback(\n    (data) => {\n      if ('hex' in data && data.hex && isValidHex(data.hex)) {\n        onChange({\n          hex: data.hex,\n          source: 'hex',\n        })\n      } else if (\n        rgb &&\n        (('r' in data && data.r) || ('g' in data && data.g) || ('b' in data && data.b))\n      ) {\n        onChange({\n          r: Number(data.r) || rgb.r,\n          g: Number(data.g) || rgb.g,\n          b: Number(data.b) || rgb.b,\n          a: rgb.a,\n          source: 'rgb',\n        })\n      } else if (hsl && 'a' in data && data.a) {\n        let alpha = Number(data.a)\n        if (alpha < 0) {\n          alpha = 0\n        } else if (alpha > 100) {\n          alpha = 100\n        }\n        alpha /= 100\n\n        onChange({\n          h: hsl.h,\n          s: hsl.s,\n          l: hsl.l,\n          a: alpha,\n          source: 'hsl',\n        })\n      }\n    },\n    [onChange, hsl, rgb]\n  )\n\n  return (\n    <Flex>\n      <Box flex={2} marginRight={1}>\n        <EditableInput\n          style={inputStyles}\n          label=\"hex\"\n          value={hex?.replace('#', '')}\n          onChange={handleChange}\n        />\n      </Box>\n      <Box flex={1} marginRight={1}>\n        <EditableInput\n          style={inputStyles}\n          label=\"r\"\n          value={rgb?.r}\n          onChange={handleChange}\n          dragLabel\n          dragMax={255}\n        />\n      </Box>\n      <Box flex={1} marginRight={1}>\n        <EditableInput\n          style={inputStyles}\n          label=\"g\"\n          value={rgb?.g}\n          onChange={handleChange}\n          dragLabel\n          dragMax={255}\n        />\n      </Box>\n      <Box flex={1} marginRight={1}>\n        <EditableInput\n          style={inputStyles}\n          label=\"b\"\n          value={rgb?.b}\n          onChange={handleChange}\n          dragLabel\n          dragMax={255}\n        />\n      </Box>\n      {!disableAlpha && (\n        <Box flex={1}>\n          <EditableInput\n            style={inputStyles}\n            label=\"a\"\n            value={Math.round((rgb?.a ?? 1) * 100)}\n            onChange={handleChange}\n            dragLabel\n            dragMax={100}\n          />\n        </Box>\n      )}\n    </Flex>\n  )\n}\n","import React from 'react'\nimport {Alpha, Checkboard, Hue, Saturation} from 'react-color/lib/components/common'\nimport {CustomPicker, HEXColor, HSLColor, HSVColor, RGBColor} from 'react-color'\nimport {Box, Button, Card, Flex, Inline, Stack, Text} from '@sanity/ui'\nimport {TrashIcon} from '@sanity/icons'\nimport styled from 'styled-components'\nimport {ColorPickerFields} from './ColorPickerFields'\nimport {CustomPickerInjectedProps} from 'react-color/lib/components/common/ColorWrap'\nimport {ColorValue} from './ColorInput'\n\nconst ColorBox = styled(Box)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n`\n\nconst ReadOnlyContainer = styled(Flex)`\n  margin-top: 6rem;\n  background-color: var(--card-bg-color);\n  position: relative;\n  width: 100%;\n`\n\nexport interface ColorPickerProps\n  extends CustomPickerInjectedProps<HSLColor | HSVColor | RGBColor | HEXColor> {\n  width?: string\n  disableAlpha: boolean\n  readOnly?: boolean\n  onUnset: () => void\n  color: ColorValue\n}\n\nconst ColorPickerInner = (props: ColorPickerProps) => {\n  const {\n    width,\n    color: {rgb, hex, hsv, hsl},\n    onChange,\n    onUnset,\n    disableAlpha,\n    readOnly,\n  } = props\n\n  if (!hsl || !hsv) {\n    return null\n  }\n\n  return (\n    <div style={{width}}>\n      <Card padding={1} border radius={1}>\n        <Stack space={2}>\n          {!readOnly && (\n            <>\n              <Card overflow=\"hidden\" style={{position: 'relative', height: '5em'}}>\n                <Saturation onChange={onChange} hsl={hsl} hsv={hsv} />\n              </Card>\n\n              <Card\n                shadow={1}\n                radius={3}\n                overflow=\"hidden\"\n                style={{position: 'relative', height: '10px'}}\n              >\n                <Hue hsl={hsl} onChange={!readOnly && onChange} />\n              </Card>\n\n              {!disableAlpha && (\n                <Card\n                  shadow={1}\n                  radius={3}\n                  overflow=\"hidden\"\n                  style={{position: 'relative', height: '10px'}}\n                >\n                  <Alpha rgb={rgb} hsl={hsl} onChange={onChange} />\n                </Card>\n              )}\n            </>\n          )}\n          <Flex>\n            <Card\n              flex={1}\n              radius={2}\n              overflow=\"hidden\"\n              style={{position: 'relative', minWidth: '4em'}}\n            >\n              <Checkboard />\n              <ColorBox\n                style={{\n                  backgroundColor: `rgba(${rgb?.r},${rgb?.g},${rgb?.b},${rgb?.a})`,\n                }}\n              />\n\n              {readOnly && (\n                <ReadOnlyContainer\n                  padding={2}\n                  paddingBottom={1}\n                  sizing=\"border\"\n                  justify=\"space-between\"\n                >\n                  <Stack space={3} marginTop={1}>\n                    <Text size={3} weight=\"bold\">\n                      {hex}\n                    </Text>\n\n                    <Inline space={3}>\n                      <Text size={1}>\n                        <strong>RGB: </strong>\n                        {rgb?.r} {rgb?.g} {rgb?.b}\n                      </Text>\n                      <Text size={1}>\n                        <strong>HSL: </strong> {Math.round(hsl?.h ?? 0)} {Math.round(hsl?.s ?? 0)}%{' '}\n                        {Math.round(hsl?.l ?? 0)}\n                      </Text>\n                    </Inline>\n                  </Stack>\n                </ReadOnlyContainer>\n              )}\n            </Card>\n\n            {!readOnly && (\n              <Flex align=\"flex-start\" marginLeft={2}>\n                <Box style={{width: 200}}>\n                  <ColorPickerFields\n                    rgb={rgb}\n                    hsl={hsl}\n                    hex={hex}\n                    onChange={onChange}\n                    disableAlpha={disableAlpha}\n                  />\n                </Box>\n                <Box marginLeft={2}>\n                  <Button onClick={onUnset} title=\"Delete color\" icon={TrashIcon} tone=\"critical\" />\n                </Box>\n              </Flex>\n            )}\n          </Flex>\n        </Stack>\n      </Card>\n    </div>\n  )\n}\n\nexport const ColorPicker = CustomPicker(ColorPickerInner)\n","import React, {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {ObjectOptions, set, setIfMissing, unset} from 'sanity'\nimport {debounce} from 'lodash'\nimport {Button} from '@sanity/ui'\nimport {AddIcon} from '@sanity/icons'\nimport {ColorPicker} from './ColorPicker'\nimport {ObjectInputProps} from 'sanity'\nimport {HSLColor, HSVColor, RGBColor} from 'react-color'\nimport {ObjectSchemaType} from 'sanity'\n\nconst DEFAULT_COLOR: ColorValue & {source: string} = {\n  hex: '#24a3e3',\n  hsl: {h: 200, s: 0.7732, l: 0.5156, a: 1},\n  hsv: {h: 200, s: 0.8414, v: 0.8901, a: 1},\n  rgb: {r: 46, g: 163, b: 227, a: 1},\n  source: 'hex',\n}\n\nexport interface ColorValue {\n  hex: string\n  hsl: HSLColor\n  hsv: HSVColor\n  rgb: RGBColor\n}\n\nexport interface ColorOptions extends Omit<ObjectOptions, 'columns'> {\n  disableAlpha?: boolean\n}\n\nexport type ColorSchemaType = Omit<ObjectSchemaType, 'options'> & {\n  options?: ColorOptions\n}\nexport type ColorInputProps = ObjectInputProps<ColorValue, ColorSchemaType>\n\nexport function ColorInput(props: ObjectInputProps) {\n  const {onChange, readOnly} = props\n  const value = props.value as ColorValue | undefined\n  const type = props.schemaType as ColorSchemaType\n  const focusRef = useRef<HTMLButtonElement>(null)\n\n  // use local state so we can have instant ui updates while debouncing patch emits\n  const [color, setColor] = useState(value)\n  useEffect(() => setColor(value), [value])\n\n  const emitSetColor = useCallback(\n    (nextColor: ColorValue) => {\n      const fieldPatches = type.fields\n        .filter((field) => field.name in nextColor)\n        .map((field) => {\n          const nextFieldValue = nextColor[field.name as keyof ColorValue]\n          const isObject = field.type.jsonType === 'object'\n          return set(\n            isObject ? Object.assign({_type: field.type.name}, nextFieldValue) : nextFieldValue,\n            [field.name]\n          )\n        })\n\n      onChange([\n        setIfMissing({_type: type.name}),\n        set(type.name, ['_type']),\n        set(nextColor.rgb?.a, ['alpha']),\n        ...fieldPatches,\n      ])\n    },\n    [onChange, type]\n  )\n\n  // The color picker emits onChange events continuously while the user is sliding the\n  // hue/saturation/alpha selectors. This debounces the event to avoid excessive patches\n  const debouncedColorChange = useMemo(() => debounce(emitSetColor, 100), [emitSetColor])\n  const handleColorChange = useCallback(\n    (nextColor: ColorValue) => {\n      setColor(nextColor)\n      debouncedColorChange(nextColor)\n    },\n    [debouncedColorChange, setColor]\n  )\n\n  const handleCreateColor = useCallback(() => {\n    setColor(DEFAULT_COLOR)\n    emitSetColor(DEFAULT_COLOR)\n  }, [emitSetColor])\n\n  const handleUnset = useCallback(() => {\n    setColor(undefined)\n    onChange(unset())\n  }, [onChange])\n\n  return (\n    <>\n      {value && value.hex ? (\n        <ColorPicker\n          /*            ref={this.focusRef}*/\n          color={color}\n          onChange={handleColorChange}\n          readOnly={readOnly || (typeof type.readOnly === 'boolean' && type.readOnly)}\n          disableAlpha={!!type.options?.disableAlpha}\n          onUnset={handleUnset}\n        />\n      ) : (\n        <Button\n          icon={AddIcon}\n          mode=\"ghost\"\n          text=\"Create color\"\n          ref={focusRef}\n          disabled={Boolean(readOnly)}\n          onClick={handleCreateColor}\n        />\n      )}\n    </>\n  )\n}\n","import React from 'react'\nimport {ColorInput, ColorOptions} from '../ColorInput'\nimport {defineType, ObjectDefinition} from 'sanity'\n\nconst round = (val: number = 1) => Math.round(val * 100)\n\nconst colorTypeName = 'color' as const\n\n/**\n * @public\n */\nexport interface ColorDefinition extends Omit<ObjectDefinition, 'type' | 'fields' | 'options'> {\n  type: typeof colorTypeName\n  options?: ColorOptions\n}\n\ndeclare module '@sanity/types' {\n  // makes type: 'color' narrow correctly when using defineTyp/defineField/defineArrayMember\n  export interface IntrinsicDefinitions {\n    color: ColorDefinition\n  }\n}\n\nexport const color = defineType({\n  name: colorTypeName,\n  type: 'object',\n  title: 'Color',\n  components: {input: ColorInput},\n  fields: [\n    {\n      title: 'Hex',\n      name: 'hex',\n      type: 'string',\n    },\n    {\n      title: 'Alpha',\n      name: 'alpha',\n      type: 'number',\n    },\n    {\n      title: 'Hue Saturation Lightness',\n      name: 'hsl',\n      type: 'hslaColor',\n    },\n    {\n      title: 'Hue Saturation Value',\n      name: 'hsv',\n      type: 'hsvaColor',\n    },\n    {\n      title: 'Red Green Blue (rgb)',\n      name: 'rgb',\n      type: 'rgbaColor',\n    },\n  ],\n  preview: {\n    select: {\n      title: 'hex',\n      alpha: 'alpha',\n      hex: 'hex',\n      hsl: 'hsl',\n    },\n    prepare({\n      title,\n      hex,\n      hsl,\n      alpha,\n    }: {\n      title?: string\n      alpha?: number\n      hex?: string\n      hsl?: {h: number; s: number; l: number}\n    }) {\n      let subtitle = hex || 'No color set'\n      if (hsl) {\n        subtitle = `H:${round(hsl.h)} S:${round(hsl.s)} L:${round(hsl.l)} A:${round(alpha)}`\n      }\n      return {\n        title: title,\n        subtitle: subtitle,\n        media: () => (\n          <div\n            style={{\n              backgroundColor: hex ?? '#000',\n              opacity: alpha ?? 1,\n              position: 'absolute',\n              height: '100%',\n              width: '100%',\n              top: '0',\n              left: '0',\n            }}\n          />\n        ),\n      }\n    },\n  },\n})\n","import {defineType} from 'sanity'\n\nexport const hsvaColor = defineType({\n  title: 'Hue Saturation Value',\n  name: 'hsvaColor',\n  type: 'object',\n  fields: [\n    {name: 'h', type: 'number', title: 'Hue'},\n    {name: 's', type: 'number', title: 'Saturation'},\n    {name: 'v', type: 'number', title: 'Value'},\n    {name: 'a', type: 'number', title: 'Alpha'},\n  ],\n})\n","import {definePlugin} from 'sanity'\nimport {hslaColor} from './schemas/hslaColor'\nimport {rgbaColor} from './schemas/rgbaColor'\nimport {color, ColorDefinition} from './schemas/color'\nimport {hsvaColor} from './schemas/hsvaColor'\n\nexport const colorInput = definePlugin({\n  name: '@sanity/color-input',\n  schema: {\n    types: [hslaColor, hsvaColor, rgbaColor, color],\n  },\n})\n\nexport {hslaColor, rgbaColor, color, hsvaColor}\nexport {ColorInput} from './ColorInput'\nexport type {ColorDefinition}\nexport type {ColorValue, ColorInputProps, ColorOptions, ColorSchemaType} from './ColorInput'\n"],"names":["hslaColor","defineType","title","name","type","fields","rgbaColor","ColorPickerFields","onChange","rgb","hsl","hex","disableAlpha","_a","sanity","useTheme","inputStyles","useMemo","input","width","padding","border","boxShadow","color","default","enabled","fg","backgroundColor","bg","fontSize","fonts","text","sizes","textAlign","label","display","base","paddingTop","paddingBottom","textTransform","handleChange","useCallback","data","isValidHex","source","r","g","b","Number","a","alpha","h","s","l","jsxs","Flex","children","jsx","Box","flex","marginRight","EditableInput","style","value","replace","dragLabel","dragMax","Math","round","ColorBox","styled","ReadOnlyContainer","ColorPickerInner","props","_b","_c","hsv","onUnset","readOnly","Card","radius","Stack","space","Fragment","overflow","position","height","Saturation","shadow","Hue","Alpha","minWidth","Checkboard","sizing","justify","marginTop","Text","size","weight","Inline","align","marginLeft","Button","onClick","icon","TrashIcon","tone","ColorPicker","CustomPicker","DEFAULT_COLOR","v","ColorInput","schemaType","focusRef","useRef","setColor","useState","useEffect","emitSetColor","nextColor","fieldPatches","filter","field","map","nextFieldValue","isObject","jsonType","set","Object","assign","_type","setIfMissing","debouncedColorChange","debounce","handleColorChange","handleCreateColor","handleUnset","unset","options","AddIcon","mode","ref","disabled","Boolean","val","colorTypeName","components","preview","select","prepare","subtitle","media","opacity","top","left","hsvaColor","colorInput","definePlugin","schema","types"],"mappings":"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"}